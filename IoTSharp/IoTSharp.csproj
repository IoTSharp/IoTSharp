<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <RuntimeIdentifiers>win7-x64;rhel.7-x64;ubuntu.18.04-x64</RuntimeIdentifiers>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <CreateUser>true</CreateUser>
    <InstallService>true</InstallService>
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
    <Company>IoT#</Company>
    <Product>IoTSharp</Product>
    <Authors>IoT#</Authors>
    <PackageProjectUrl>https://github.com/IoTSharp/IoTSharp</PackageProjectUrl>
    <PackageLicenseUrl></PackageLicenseUrl>
    <RepositoryUrl>https://github.com/IoTSharp/IoTSharp</RepositoryUrl>
    <PackageReleaseNotes>Open-source IoT Platform - Device management, data collection, processing and visualization.   https://www.iotsharp.net</PackageReleaseNotes>
    <Description>Open-source IoT Platform - Device management, data collection, processing and visualization.</Description>
    <PackageId>IoTSharp</PackageId>
    <UserSecretsId>18970590-05bf-4a1f-a70b-3c8a120d12cb</UserSecretsId>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <Version>0.1.99</Version>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <RepositoryType>git</RepositoryType>
    <PackageTags>IoT</PackageTags>
    <PackageIconUrl>https://avatars2.githubusercontent.com/u/44353254?s=200&amp;v=4</PackageIconUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <DocumentationFile>D:\GitHub\IoTSharp\IoTSharp\IoTSharp\IoTSharp.xml</DocumentationFile>
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <Content Update="appsettings.json">
      <LinuxPath>/etc/iotsharp/appsettings.json</LinuxPath>
    </Content>
    <Content Update="appsettings.Development.json">
      <LinuxPath>/etc/iotsharp/appsettings.Development.json</LinuxPath>
    </Content>
    <Content Include="iotsharp.service" CopyToPublishDirectory="PreserveNewest">
      <LinuxPath>/etc/systemd/system/iotsharp.service</LinuxPath>
    </Content>
    <LinuxFolder Include="/var/log/iotsharp" Group="iotsharp" Owner="iotsharp" RemoveOnUninstall="true" />
    <LinuxFolder Include="/var/run/iotsharp" Group="iotsharp" Owner="iotsharp" RemoveOnUninstall="true" />
    <LinuxFolder Include="/var/lib/iotsharp" Group="iotsharp" Owner="iotsharp" RemoveOnUninstall="true" />
    <RpmDependency Include="libunwind" Version="1.1" />
    <RpmDependency Include="libicu" Version="50.1.2" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CoAP.NET.Core" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.Hosting.WindowsServices" Version="2.2.0" />
    <PackageReference Include="MQTTnet.AspNetCoreEx" Version="3.0.2.1" />
    <PackageReference Include="MQTTnet.Extensions.ManagedClient" Version="3.0.2" />
    <PackageReference Include="Packaging.Targets" Version="0.1.78" />

  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Migrations\**" />
    <Content Remove="Migrations\**" />
    <EmbeddedResource Remove="Migrations\**" />
    <None Remove="Migrations\**" />
    <None Include="..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Changwei.AspNetCore.SpaServices.Extensions.VueCli" Version="1.0.0" />
    <PackageReference Include="IoTSharp.X509Extensions" Version="1.3.3" />
    <PackageReference Include="LiteDB" Version="4.1.4" />

    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.2.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="2.2.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="2.2.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="2.2.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.Design" Version="1.1.6" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="MQTTnet" Version="3.0.2" />
    <PackageReference Include="MQTTnet.AspNetCore" Version="3.0.2" />
    <PackageReference Include="MQTTnet.Extensions.Rpc" Version="3.0.2" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="2.2.4" />
    <PackageReference Include="NSwag.AspNetCore" Version="13.0.2" />
    <PackageReference Include="QuartzHostedService" Version="0.0.5" />
    <PackageReference Include="Quartzmin" Version="1.0.3" />
    <PackageReference Include="System.Text.Encoding.CodePages" Version="4.5.1" />
  </ItemGroup>
  <ProjectExtensions>
    <VisualStudio>
      <UserProperties appsettings_1Development_1json__JSONSchema="http://json.schemastore.org/bungee-plugin" />
    </VisualStudio>
  </ProjectExtensions>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <None Remove=".gitignore" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Jobs\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install " />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install -g @vue/cli " />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install " />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod" />


    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
